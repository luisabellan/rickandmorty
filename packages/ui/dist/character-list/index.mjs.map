{"version":3,"sources":["../../src/character-card/index.tsx","../../src/character-search/index.tsx","../../src/character-list/index.tsx"],"names":["jsxs","jsx"],"mappings":"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","file":"index.mjs","sourcesContent":["interface Character {\n  id: number;\n  name: string;\n  status: string;\n  species: string;\n  type: string;\n  gender: string;\n  origin?: {\n    name: string;\n    type: string;\n    dimension: string;\n  } | null;\n  location?: {\n    name: string;\n    type: string;\n    dimension: string;\n  } | null;\n  image: string;\n  episode: {\n    id: number;\n    name: string;\n    air_date: string;\n    episode: string;\n  }[];\n  created: string;\n}\n\ninterface CharacterCardProps {\n  character: Character;\n}\n\nexport function CharacterCard({ character }: CharacterCardProps) {\n  const statusColor = {\n    'Alive': 'text-green-400',\n    'Dead': 'text-red-400',\n    'unknown': 'text-gray-400',\n  }[character.status] || 'text-gray-400';\n\n  return (\n    <div className=\"bg-gray-800 bg-opacity-80 rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-300 hover:scale-105\">\n      <div className=\"relative h-64 w-full\">\n        <img\n          src={character.image}\n          alt={character.name}\n          className=\"w-full h-full object-cover\"\n        />\n        <div className={`absolute top-3 right-3 px-3 py-1 rounded-full ${statusColor} bg-black bg-opacity-70 font-semibold text-sm`}>\n          {character.status}\n        </div>\n      </div>\n\n      <div className=\"p-4 space-y-2\">\n        <h3 className=\"text-xl font-bold text-white mb-3 truncate\">{character.name}</h3>\n\n        <div className=\"space-y-1 text-sm\">\n          <p className=\"text-gray-300\">\n            <span className=\"text-gray-400\">Species:</span>{' '}\n            <span className=\"text-white font-medium\">{character.species}</span>\n          </p>\n\n          <p className=\"text-gray-300\">\n            <span className=\"text-gray-400\">Gender:</span>{' '}\n            <span className=\"text-white font-medium\">{character.gender}</span>\n          </p>\n\n          <p className=\"text-gray-300\">\n            <span className=\"text-gray-400\">Location:</span>{' '}\n            <span className=\"text-white font-medium truncate block\">\n              {character.location?.name || 'Unknown'}\n            </span>\n          </p>\n\n          {character.type && character.type.trim() !== '' && (\n            <p className=\"text-gray-300\">\n              <span className=\"text-gray-400\">Type:</span>{' '}\n              <span className=\"text-white font-medium\">{character.type}</span>\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}","'use client';\n\nimport { useState } from 'react';\n\ninterface CharacterSearchProps {\n  initialSearch?: string;\n  initialStatus?: string;\n  initialSpecies?: string;\n  initialGender?: string;\n  initialLocation?: string;\n}\n\nexport function CharacterSearch({\n  initialSearch = '',\n  initialStatus = '',\n  initialSpecies = '',\n  initialGender = '',\n  initialLocation = '',\n}: CharacterSearchProps) {\n  const [search, setSearch] = useState(initialSearch);\n  const [status, setStatus] = useState(initialStatus);\n  const [species, setSpecies] = useState(initialSpecies);\n  const [gender, setGender] = useState(initialGender);\n  const [location, setLocation] = useState(initialLocation);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const params = new URLSearchParams();\n    if (search) params.set('search', search);\n    if (status) params.set('status', status);\n    if (species) params.set('species', species);\n    if (gender) params.set('gender', gender);\n    if (location) params.set('location', location);\n\n    window.location.href = `/characters?${params.toString()}`;\n  };\n\n  const handleReset = () => {\n    setSearch('');\n    setStatus('');\n    setSpecies('');\n    setGender('');\n    setLocation('');\n    window.location.href = '/characters';\n  };\n\n  return (\n    <div className=\"bg-gray-800 bg-opacity-80 rounded-lg p-6 mb-8 shadow-lg\">\n      <h2 className=\"text-2xl font-bold text-white mb-4\">Search & Filter</h2>\n\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        {/* Search by name */}\n        <div>\n          <label htmlFor=\"search\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n            Character Name\n          </label>\n          <input\n            type=\"text\"\n            id=\"search\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            placeholder=\"Rick, Morty, Summer...\"\n            className=\"w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          />\n        </div>\n\n        {/* Filters in a grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {/* Status filter */}\n          <div>\n            <label htmlFor=\"status\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Status\n            </label>\n            <select\n              id=\"status\"\n              value={status}\n              onChange={(e) => setStatus(e.target.value)}\n              className=\"w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"\">All</option>\n              <option value=\"alive\">Alive</option>\n              <option value=\"dead\">Dead</option>\n              <option value=\"unknown\">Unknown</option>\n            </select>\n          </div>\n\n          {/* Species filter */}\n          <div>\n            <label htmlFor=\"species\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Species\n            </label>\n            <input\n              type=\"text\"\n              id=\"species\"\n              value={species}\n              onChange={(e) => setSpecies(e.target.value)}\n              placeholder=\"Human, Alien...\"\n              className=\"w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n          </div>\n\n          {/* Gender filter */}\n          <div>\n            <label htmlFor=\"gender\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Gender\n            </label>\n            <select\n              id=\"gender\"\n              value={gender}\n              onChange={(e) => setGender(e.target.value)}\n              className=\"w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"\">All</option>\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n              <option value=\"genderless\">Genderless</option>\n              <option value=\"unknown\">Unknown</option>\n            </select>\n          </div>\n\n          {/* Location filter */}\n          <div>\n            <label htmlFor=\"location\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Location\n            </label>\n            <input\n              type=\"text\"\n              id=\"location\"\n              value={location}\n              onChange={(e) => setLocation(e.target.value)}\n              placeholder=\"Earth, Citadel...\"\n              className=\"w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n          </div>\n        </div>\n\n        {/* Action buttons */}\n        <div className=\"flex gap-4 pt-2\">\n          <button\n            type=\"submit\"\n            className=\"flex-1 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800\"\n          >\n            🔍 Search\n          </button>\n          <button\n            type=\"button\"\n            onClick={handleReset}\n            className=\"px-6 py-3 bg-gray-600 hover:bg-gray-700 text-white font-semibold rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 focus:ring-offset-gray-800\"\n          >\n            ✕ Clear\n          </button>\n        </div>\n      </form>\n\n      {/* Active filters display */}\n      {(search || status || species || gender || location) && (\n        <div className=\"mt-4 pt-4 border-t border-gray-700\">\n          <p className=\"text-sm text-gray-400 mb-2\">Active filters:</p>\n          <div className=\"flex flex-wrap gap-2\">\n            {search && (\n              <span className=\"px-3 py-1 bg-blue-600 bg-opacity-50 text-blue-200 rounded-full text-sm\">\n                Name: {search}\n              </span>\n            )}\n            {status && (\n              <span className=\"px-3 py-1 bg-green-600 bg-opacity-50 text-green-200 rounded-full text-sm\">\n                Status: {status}\n              </span>\n            )}\n            {species && (\n              <span className=\"px-3 py-1 bg-purple-600 bg-opacity-50 text-purple-200 rounded-full text-sm\">\n                Species: {species}\n              </span>\n            )}\n            {gender && (\n              <span className=\"px-3 py-1 bg-pink-600 bg-opacity-50 text-pink-200 rounded-full text-sm\">\n                Gender: {gender}\n              </span>\n            )}\n            {location && (\n              <span className=\"px-3 py-1 bg-yellow-600 bg-opacity-50 text-yellow-200 rounded-full text-sm\">\n                Location: {location}\n              </span>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { CharacterCard } from '../character-card';\nimport { CharacterSearch } from '../character-search';\n\nexport interface Character {\n  id: number;\n  name: string;\n  status: string;\n  species: string;\n  type: string;\n  gender: string;\n  origin: {\n    name: string;\n    type: string;\n    dimension: string;\n  };\n  location: {\n    name: string;\n    type: string;\n    dimension: string;\n  };\n  image: string;\n  episode: {\n    id: number;\n    name: string;\n    air_date: string;\n    episode: string;\n  }[];\n  created: string;\n}\n\nexport interface CharactersData {\n  characters: {\n    info: {\n      count: number;\n      pages: number;\n      next: number | null;\n      prev: number | null;\n    };\n    results: Character[];\n  };\n}\n\ninterface CharacterListProps {\n  data: CharactersData;\n  searchParams: {\n    page?: string;\n    search?: string;\n    status?: string;\n    species?: string;\n    gender?: string;\n    location?: string;\n  };\n}\n\nexport function CharacterList({ data, searchParams }: CharacterListProps) {\n  if (!data) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <p className=\"text-xl text-gray-500\">No characters found</p>\n      </div>\n    );\n  }\n\n  const { results: characters, info } = data.characters;\n  const currentPage = searchParams.page ? parseInt(searchParams.page) : 1;\n  const name = searchParams.search || null;\n  const status = searchParams.status || null;\n  const species = searchParams.species || null;\n  const gender = searchParams.gender || null;\n  const location = searchParams.location || null;\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-purple-900 py-12 px-4\">\n      <div className=\"max-w-7xl mx-auto\">\n        <h1 className=\"text-4xl md:text-5xl font-bold text-white text-center mb-8\">\n          Rick and Morty Characters\n        </h1>\n\n        <CharacterSearch\n          initialSearch={name || ''}\n          initialStatus={status || ''}\n          initialSpecies={species || ''}\n          initialGender={gender || ''}\n          initialLocation={location || ''}\n        />\n\n        <div className=\"mb-4\">\n          <p className=\"text-gray-300 text-center\">\n            Showing {characters.length} of {info.count} characters\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mb-12\">\n          {characters.map((character) => (\n            <CharacterCard key={character.id} character={character} />\n          ))}\n        </div>\n\n        <div className=\"flex justify-center items-center gap-4 py-8\">\n          {info.prev && (\n            <a\n              href={`?page=${info.prev}${name ? `&search=${name}` : ''}${status ? `&status=${status}` : ''}${species ? `&species=${species}` : ''}${gender ? `&gender=${gender}` : ''}${location ? `&location=${location}` : ''}`}\n              className=\"px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg transition-colors\"\n            >\n              ← Previous\n            </a>\n          )}\n\n          <span className=\"text-white text-lg font-medium px-4\">\n            Page {currentPage} of {info.pages}\n          </span>\n\n          {info.next && (\n            <a\n              href={`?page=${info.next}${name ? `&search=${name}` : ''}${status ? `&status=${status}` : ''}${species ? `&species=${species}` : ''}${gender ? `&gender=${gender}` : ''}${location ? `&location=${location}` : ''}`}\n              className=\"px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg transition-colors\"\n            >\n              Next →\n            </a>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}"]}