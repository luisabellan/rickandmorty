{"version":3,"sources":["../../src/character-card/index.tsx"],"names":[],"mappings":";;AA+BO,SAAS,aAAA,CAAc,EAAE,SAAA,EAAU,EAAuB;AAC/D,EAAA,MAAM,WAAA,GAAc;AAAA,IAClB,OAAA,EAAS,gBAAA;AAAA,IACT,MAAA,EAAQ,cAAA;AAAA,IACR,SAAA,EAAW;AAAA,GACb,CAAE,SAAA,CAAU,MAAM,CAAA,IAAK,eAAA;AAEvB,EAAA,uBACE,IAAA,CAAC,KAAA,EAAA,EAAI,SAAA,EAAU,6HAAA,EACb,QAAA,EAAA;AAAA,oBAAA,IAAA,CAAC,KAAA,EAAA,EAAI,WAAU,sBAAA,EACb,QAAA,EAAA;AAAA,sBAAA,GAAA;AAAA,QAAC,KAAA;AAAA,QAAA;AAAA,UACC,KAAK,SAAA,CAAU,KAAA;AAAA,UACf,KAAK,SAAA,CAAU,IAAA;AAAA,UACf,SAAA,EAAU;AAAA;AAAA,OACZ;AAAA,0BACC,KAAA,EAAA,EAAI,SAAA,EAAW,iDAAiD,WAAW,CAAA,6CAAA,CAAA,EACzE,oBAAU,MAAA,EACb;AAAA,KAAA,EACF,CAAA;AAAA,oBAEA,IAAA,CAAC,KAAA,EAAA,EAAI,SAAA,EAAU,eAAA,EACb,QAAA,EAAA;AAAA,sBAAA,GAAA,CAAC,IAAA,EAAA,EAAG,SAAA,EAAU,4CAAA,EAA8C,QAAA,EAAA,SAAA,CAAU,IAAA,EAAK,CAAA;AAAA,sBAE3E,IAAA,CAAC,KAAA,EAAA,EAAI,SAAA,EAAU,mBAAA,EACb,QAAA,EAAA;AAAA,wBAAA,IAAA,CAAC,GAAA,EAAA,EAAE,WAAU,eAAA,EACX,QAAA,EAAA;AAAA,0BAAA,GAAA,CAAC,MAAA,EAAA,EAAK,SAAA,EAAU,eAAA,EAAgB,QAAA,EAAA,UAAA,EAAQ,CAAA;AAAA,UAAQ,GAAA;AAAA,0BAChD,GAAA,CAAC,MAAA,EAAA,EAAK,SAAA,EAAU,wBAAA,EAA0B,oBAAU,OAAA,EAAQ;AAAA,SAAA,EAC9D,CAAA;AAAA,wBAEA,IAAA,CAAC,GAAA,EAAA,EAAE,SAAA,EAAU,eAAA,EACX,QAAA,EAAA;AAAA,0BAAA,GAAA,CAAC,MAAA,EAAA,EAAK,SAAA,EAAU,eAAA,EAAgB,QAAA,EAAA,SAAA,EAAO,CAAA;AAAA,UAAQ,GAAA;AAAA,0BAC/C,GAAA,CAAC,MAAA,EAAA,EAAK,SAAA,EAAU,wBAAA,EAA0B,oBAAU,MAAA,EAAO;AAAA,SAAA,EAC7D,CAAA;AAAA,wBAEA,IAAA,CAAC,GAAA,EAAA,EAAE,SAAA,EAAU,eAAA,EACX,QAAA,EAAA;AAAA,0BAAA,GAAA,CAAC,MAAA,EAAA,EAAK,SAAA,EAAU,eAAA,EAAgB,QAAA,EAAA,WAAA,EAAS,CAAA;AAAA,UAAQ,GAAA;AAAA,8BAChD,MAAA,EAAA,EAAK,SAAA,EAAU,mCACb,QAAA,EAAA,SAAA,CAAU,QAAA,EAAU,QAAQ,SAAA,EAC/B;AAAA,SAAA,EACF,CAAA;AAAA,QAEC,SAAA,CAAU,IAAA,IAAQ,SAAA,CAAU,IAAA,CAAK,IAAA,OAAW,EAAA,oBAC3C,IAAA,CAAC,GAAA,EAAA,EAAE,SAAA,EAAU,eAAA,EACX,QAAA,EAAA;AAAA,0BAAA,GAAA,CAAC,MAAA,EAAA,EAAK,SAAA,EAAU,eAAA,EAAgB,QAAA,EAAA,OAAA,EAAK,CAAA;AAAA,UAAQ,GAAA;AAAA,0BAC7C,GAAA,CAAC,MAAA,EAAA,EAAK,SAAA,EAAU,wBAAA,EAA0B,oBAAU,IAAA,EAAK;AAAA,SAAA,EAC3D;AAAA,OAAA,EAEJ;AAAA,KAAA,EACF;AAAA,GAAA,EACF,CAAA;AAEJ","file":"index.mjs","sourcesContent":["interface Character {\n  id: number;\n  name: string;\n  status: string;\n  species: string;\n  type: string;\n  gender: string;\n  origin?: {\n    name: string;\n    type: string;\n    dimension: string;\n  } | null;\n  location?: {\n    name: string;\n    type: string;\n    dimension: string;\n  } | null;\n  image: string;\n  episode: {\n    id: number;\n    name: string;\n    air_date: string;\n    episode: string;\n  }[];\n  created: string;\n}\n\ninterface CharacterCardProps {\n  character: Character;\n}\n\nexport function CharacterCard({ character }: CharacterCardProps) {\n  const statusColor = {\n    'Alive': 'text-green-400',\n    'Dead': 'text-red-400',\n    'unknown': 'text-gray-400',\n  }[character.status] || 'text-gray-400';\n\n  return (\n    <div className=\"bg-gray-800 bg-opacity-80 rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-300 hover:scale-105\">\n      <div className=\"relative h-64 w-full\">\n        <img\n          src={character.image}\n          alt={character.name}\n          className=\"w-full h-full object-cover\"\n        />\n        <div className={`absolute top-3 right-3 px-3 py-1 rounded-full ${statusColor} bg-black bg-opacity-70 font-semibold text-sm`}>\n          {character.status}\n        </div>\n      </div>\n\n      <div className=\"p-4 space-y-2\">\n        <h3 className=\"text-xl font-bold text-white mb-3 truncate\">{character.name}</h3>\n\n        <div className=\"space-y-1 text-sm\">\n          <p className=\"text-gray-300\">\n            <span className=\"text-gray-400\">Species:</span>{' '}\n            <span className=\"text-white font-medium\">{character.species}</span>\n          </p>\n\n          <p className=\"text-gray-300\">\n            <span className=\"text-gray-400\">Gender:</span>{' '}\n            <span className=\"text-white font-medium\">{character.gender}</span>\n          </p>\n\n          <p className=\"text-gray-300\">\n            <span className=\"text-gray-400\">Location:</span>{' '}\n            <span className=\"text-white font-medium truncate\">\n              {character.location?.name || 'Unknown'}\n            </span>\n          </p>\n\n          {character.type && character.type.trim() !== '' && (\n            <p className=\"text-gray-300\">\n              <span className=\"text-gray-400\">Type:</span>{' '}\n              <span className=\"text-white font-medium\">{character.type}</span>\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]}